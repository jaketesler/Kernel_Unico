#UDOO KERNEL iMX.6/SAMx3<br>"Cheat Sheet"

To anybody reading this, these are my personal notes integrated into a README. Proceed with caution...
<br>IMPORTANT: This fork is meant for UDOO development only. Files specific to other platforms might be missing.
<br><br>
###Info:
UDOO kernel files are mainly located in /arch/arm/mach-mx6
<br>UBOOT documentation files are located in the /UDOO folder
<br>See also u-boot-mx6 repo. 
<br>Files with "sdl" are Dual-Core; files with "qd" are Quad-Core. If you change something within a file it will only affect that specific core architecture platform.
<br><br>To compile the kernel, use the custom included utility "udoo-kc"
<br>See "udoo-kc --help" for help.
<br>
<br>
###NOTE: For this document, UDOO Dual-Core (sdl) is used as the example. To switch from Dual- to Quad-Core, just replace (sdl) with (qd) or (Q) within files as needed.
<br>
##GPIO Pin Reference
From now on, please use the following naming convention (**bold**) when referring to UDOO or GPIO pins:

*	GPIO "software pin" (**SWPin**):
<br>This is the GPIO pin as defined in the graphical pin diagram and used for manually manipulating the value.
<br>[e.g. pin number is the 'XX' value in /sys/class/gpio/gpioXX/direction]
<br>The SW pin can be found on the graphical pin diagram.
<br>NOTE: If a pin is muxed to be a GPIO, use SW Pin. If it is muxed to something other than a GPIO (UART, I2C, etc.), describe it as a SW BUS pin.
<br>

*	GPIO "software interface" or "software bus" (**SW BUS**):
<br>If a pin is muxed as something other than GPIO, we need to describe it as such. Use "software interface" instead of "software pin".
<br>[e.g. UART4, PWM3, SDA1]
<br>The different interface types of the pins are listed on the graphical pin diagram. 
<br><i>NOTE: Certain HW pins can have multiple software interface types, and some exact interface types even appear on multiple pins. If possible, mention either the SW or HW pin associated with the SW BUS.</i>
<br>

*	GPIO "kernel pin" (**KERPin**):
<br>This is the name of the pin as defined in the alternate pin table documentation and in the kernel source files. 
<br>[e.g. the "CSI0\_DAT13" in '"MX6DL\_PAD\_CSI0\_DAT13\_\_UART4\_RXD,"', or the "GPIO\_1" in '"MX6DL\_PAD\_GPIO\_1\_\_PWM2\_PWMO,"'.]
<br>The KER Pin can be found in the Alternate Pin Table, where the HW Pin will be listed under ALT5 as GPIO#\_IOxx whereby xx is the HW GPIO pin you want. <br>Look down the column, and within iMX.6, the "Pin Name" will be the KER Pin.
<br>

*	GPIO "hardware pin" or "physical pin" (**HWPin**):
<br>This is the pin number that corresponds to the silkscreen on the board (or the graphical pin documentation). 
<br>[e.g. D58, TX1]
<br>The HW Pin can be found on the graphical pin diagram.
<br>

*	GPIO "dev pin" (**DEVPin**):
<br>This isn't really a number, but we can use this to describe the /dev/ttyXXXX file a particular SW Pin or KER Pin refers to. 
<br>[e.g. ttymxc3, tty1]



As an example, SW Pin **137** is the same as HW Pin **D31** and is the same as KER Pin **DISP0\_DAT10**.
<br>Alternatively, SW Pin **159**, SW BUS **UART4RX**, KER Pin **CSI0\_DAT13**, HW Pin **RX1**, and DEV Pin **ttymxc3** all correspond to the same GPIO 'pin'.


<br>
## KERNEL File MODIFICATIONS
Two header files in arch/arm/mach-mx6
<br>Modified file drm.h in include/drm/
<br>Modified <code>static inline void mx6q\_seco\_UDOO\_init\_uart</code> in board-mx6\_seco\_UDOO.c to include more UART ports
<br>Removed unnecessary files (unrelated to UDOO development) from arch/arm/mach-mx6

<br>
## SYSTEM
Made changes to (and added file) /etc/init/ttymxc3.conf
<br>cmd: stty to fix baud rate of ports to 9600 [<code>sudo stty -F /dev/ttymxc3 9600</code>]
<br>modified /etc/default/console-setup to include more ttys[#]


	ps -ef | grep getty [to confirm login prompt dialogs]



## CONNECTIONS:
DEV Pin : SW BUS : add'l conn.
<br>ttymxc0 : UART1
<br>ttymxc1 : UART2 : USB
<br>ttymxc2* : ? : ?
<br>ttymxc3 : UART4+R : TXRX1
<br>ttymxc4* : ? : ?
<br>*just appeared recently...out of nowhere.

###To connect: 
Type into prompt:

	screen /dev/tty[[whatever file it is, see above]] 115200

replace the brackets with the name of the connector
<br>use <code>ls /dev/tty*</code> to find devices


##GPIOs
### TO MAKE CHANGES TO GPIO PINS:

###Pin Muxing
To change the Software Function of a GPIO pin (i.e. GPIO â€”> UART instead):

1. Find the architecture core platform header file and search for the KER Pin name within the file (e.g. board-mx6qd\_seco\_UDOO.h)
2. Comment out the previous definition from the <code>static iomux\_v3\_cfg\_t mx6sdl\_seco\_UDOO\_pads[]</code> method. Uncomment the mode you want instead. There are many forms of the pin in the code, so just uncomment the one you want and comment the previous pin definition.<br>NOTE: Leave only ONE uncommented!
3. If you are changing a pin from SW Pin (Direct GPIO) to a SW BUS, comment out the KER Pin entry from one of the <code>mx6dl\_set\_\*\_outputmode\_\*</code> methods below.
<br>If changing from a SW BUS to a GPIO, be sure to uncomment a KER PIN entry.

###Change the startup value of a GPIO pin (input/outHigh/outLow):
1. Open board-mx6sdl\_seco\_UDOO.h in /arch/arm/mx6 (or quad name and respective header file for that board instead)
2. Comment out pin definition from one method, uncomment in the method you want
<br>(e.g.) move <code>MX6DL\_PAD\_GPIO\_0\_\_GPIO\_MODE,</code> (including comma, excluding quotes) 
<br>from <code>static unsigned int mx6dl\_set\_in\_outputmode\_high[]</code>
<br>to <code>static unsigned int mx6dl\_set\_in\_outputmode\_low[]</code>
<br>to change from default outputHigh to outoutLow on boot.

The startup methods are:

>*	static unsigned int mx6dl\_set\_in\_outputmode\_high[]	-- default output, HIGH
>*	static unsigned int mx6dl\_set\_in\_outputmode\_low[]	-- default output, LOW
>*	static unsigned int mx6dl\_set\_in\_inputmode[]		-- default input

###Kernel Configuration
Within the kernel source, a KER Pin name cannot just be copied and pasted into a line within the header code. 
<br>Here is the general format for the KER Pin entries in the header source file:
>"MX6DL\_PAD\_**[KER Pin]**\_\_**[KER Pin-specific function]**"
<br>e.g. MX6DL\_PAD\_SD1\_DAT2\_\_GPIO\_1\_19,

For the default startup values (GPIO-only), the format is as follows:
>"MX6DL\_PAD\_**[KER Pin]**\_\_GPIO\_MODE,"
<br>e.g. MX6DL\_PAD\_SD1\_DAT2\_\_GPIO\_MODE, 
<br>


<br>
###To write to a GPIO pin:
	1) 	echo out > /sys/class/gpio/gpioxx/direction
	2a) echo 1 > /sys/class/gpio/gpioxx/value <-- high
	2b) echo 0 > /sys/class/gpio/gpioxx/value <-- low
		[where xx is the GPIO SW Pin]

<br>
####Other Project-specific GPIO Notes
LED protoblock is on SWpin GPIO20 / GPIO17
<br><br>


<br>
## External sources
[UDOO Alt Pin Table](http://udoo.org/download/files/pinout/UDOO_pinout_alternate_table.pdf")
[UDOO Graphical Pin Table](http://udoo.org/download/files/pinout/Udoo_pinout_diagram.pdf)